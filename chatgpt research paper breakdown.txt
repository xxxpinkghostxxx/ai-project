Digital Neuron Model Specification for PyTorch Geometric
We outline a full specification for implementing biologically inspired neuron dynamics (including STDP, IEG, criticality, etc.) within a PyTorch Geometric (PyG) Data object. This model is guided by recent organoid “learning and memory” findings
nature.com
nature.com
. It assumes nodes represent neurons (excitatory or inhibitory) and edges represent synapses with weights. All node/edge attributes are stored in the Data object (e.g. data.node_label dicts and data.edge_attr tensors).
1. Node and Edge Data Model Extensions
Extend each node’s attributes to capture membrane and plasticity state. At minimum, add:
is_excitatory (bool): true for excitatory (glutamatergic) neurons, false for inhibitory (GABAergic). The organoid model included both types
nature.com
nature.com
. Use this to determine whether outgoing weights are positive or negative and how spikes affect others.
v_mem (float tensor): membrane potential (mV or normalized). Initialize to resting potential (e.g. 0). Subthreshold inputs accumulate here.
v_dend (float tensor): optional dendritic potential. Use for subthreshold (“dendritic”) integration separate from v_mem if modeling multiple compartments (see Dendritic logic below).
I_syn (float tensor): total synaptic input current arriving this timestep (could be integrated or reset each step). Helps accumulate pre-spike input.
refractory_timer (float): time remaining (ms) during which the neuron cannot fire again. Initialized to 0. After a spike set to the refractory period.
last_spike_time (float): timestamp of the last spike event. Used for Δt-based rules and refractory reset. Initialize to -∞.
IEG_flag (bool or float): marks if the neuron has “Immediate Early Gene” expression (a proxy for plasticity tagging). Initially false. Set true when neuron has high recent activity (see IEG tagging). This decays over seconds.
plast_enabled (bool): plasticity enable gate (PLAST_EN). When false, weight updates and tagging are disabled. Default true or controlled by modulators.
theta_burst_counter (int): counts spikes in a short window (e.g. per 100 ms block) to detect theta-burst patterns (100 Hz bursts). Initialize to 0.
eligibility_trace (float): tracks recent pre-/post-spike correlation for three-factor learning (decays over ~seconds). Initialize to 0.
For edges, extend attributes as follows:
weight (float tensor): synaptic strength. Positive for excitatory synapses, negative for inhibitory. Default small random value or pre-trained value.
weight_sign (int): +1 or –1, or use sign of weight. Can use is_excitatory of source node to set sign.
delay (float): transmission delay (ms) if implementing axonal delay. Default 0. Can allow heterogeneous delays if needed.
elig_trace (float): synapse-specific eligibility trace (for STDP or neuromodulated plasticity). Initialize to 0.
last_pre_spike (float) and last_post_spike (float): optional: record last spike times of pre- and post-synaptic neuron at this synapse for easy Δt access. Alternatively, use node’s last_spike_time.
stp_tag (bool): marks if this synapse is currently tagged by a theta-burst (for later LTP). Set during stimulation and used in consolidation. Initialize false.
By default, all new numeric fields start at 0 (or a biologically plausible baseline), and boolean fields start false. These extensions mirror the organoid’s components: e.g., the organoid neurons express glutamatergic (excitatory) and GABAergic (inhibitory) receptors
nature.com
nature.com
, so our model distinguishes excitatory vs. inhibitory node types.
2. Timing System
Implement an event-driven or discrete-time loop with a global clock t. Each node tracks its own last_spike_time. On each timestep or event:
Update each node’s last_spike_time if it fired. Compute time differences Δt = current_time – last_spike_time for each node when needed (for STDP or refractory).
Maintain event windows: e.g. STDP window (~20–40 ms) and theta-burst window (e.g. 4 pulses at 100 Hz ~10 ms intervals). Use t - last_spike_time to check if two spikes (pre vs. post) fall within the STDP window.
Use a spike queue or flags: when a neuron spikes, schedule an event to propagate to post-synaptic nodes (after delay). The queue holds (source, target, weight, time) events.
Decrement continuous timers: e.g. reduce refractory_timer and decay eligibility_trace and IEG_flag (to simulate gene expression decay). For example, if IEG_flag is a float count-down, decrement it by Δt each step.
By tracking last_spike_time and using timestamps, the model can evaluate Δt precisely. For example, on a post-synaptic spike, iterate over incoming edges and compute Δt = (post_time – last_pre_spike) to apply STDP. Similarly, pre-synaptic spikes can check for a recent last_post_spike on the target for anti-causal updates. This implements biologically inspired STDP windows.
3. Synaptic Integration Model
Use a conductance- or current-based integration scheme. Each timestep (or upon incoming spike event):
Spike handling: When node i fires (reaches threshold v_mem >= V_thresh and refractory_timer<=0), record last_spike_time=i = t, set refractory_timer = T_ref (e.g. 2–5 ms), reset v_mem to resting potential, and set a spike flag.
Output to neighbors: For each outgoing edge (i->j) with weight w, schedule to add I_syn_j += w to neuron j after the edge’s delay. If source is inhibitory, w should be negative (i.e., subtract from target potential).
Membrane updates: At each step, update v_mem as, for example, v_mem += I_syn + external_input then leak: v_mem -= (v_mem - V_rest) * (dt/τ_mem). Handle separately any dendritic integration: e.g. apply part of input to v_dend and then a threshold/nonlinear coupling from v_dend to v_mem. This models subthreshold dendritic effects. For instance, high subthreshold v_dend (without full spike) could partially prime the soma or influence plasticity (dendritic logic).
Refractory logic: If refractory_timer > 0, prevent spiking (ignore threshold) and optionally reset v_mem to a reset potential. Decrement refractory_timer by dt each step.
Spike propagation: When an event from a pre-synaptic spike arrives at neuron j, add to I_syn_j. Then update v_mem_j. If v_mem_j crosses threshold, trigger a spike event for j.
This mimics the organoid’s electrophysiology: for example, the presence of AMPA/NMDA channels is required for STP/LTP
nature.com
, so one can model fast excitatory conductances (AMPA) and slower ones (NMDA). In practice, ensure excitatory synapses (excitatory nodes) depolarize the post- neuron (increase v_mem), while inhibitory synapses hyperpolarize it. The net effect (balance of E/I) will reproduce bursting or silencing: e.g., blocking excitatory receptors (NMDA/AMPA antagonists) stops bursting, whereas blocking inhibition (bicuculline) increases firing
nature.com
. Our sign convention and weights must allow that.
4. Plasticity Model (STDP, Eligibility, Theta-Burst, IEG Tagging)
Implement synaptic plasticity via spike-timing rules and neuromodulatory tags. Key components:
STDP windows: For each pre-post spike pair within a window (e.g. ±50 ms), update weight += A_plus * exp(-Δt/τ_plus) if pre preceded post (Δt > 0), and weight -= A_minus * exp(-|Δt|/τ_minus) if post preceded pre (Δt < 0). Typical τ values ~20 ms. Store last_pre_spike and last_post_spike per edge (or use node times) to compute Δt. Clip weights to biologically plausible bounds (e.g. non-negative for excitatory, negative for inhibitory). This implements spike-timing plasticity, a core form of synaptic change in learning.
Eligibility traces: Rather than applying weight changes immediately, accumulate them in eligibility_trace variables (node- or edge-level). For instance, whenever an STDP event would occur, increment eligibility_trace_edge += exp(-|Δt|/τ_elig) (decaying eligibility over ~seconds). Apply actual weight updates only when a plasticity gate is open (see gating below), or keep a running weighted sum that decays if not consolidated.
Theta-burst logic (TBS): Detect high-frequency bursts on a neuron or synapse. E.g., if a neuron fires 4 spikes at ~10 ms intervals (100 Hz) repeatedly within a short period (the model uses 4 trains at theta frequency
nature.com
), tag its outgoing synapses (stp_tag = True) or set a special burst trace. This mimics experimental theta-burst stimulation, which in organoids drove short-term potentiation and network connectivity increases
nature.com
. In practice, when theta_burst_counter exceeds threshold (say 4 spikes in 50 ms), set stp_tag on those edges. Later, consolidate these tags into stronger LTP (see next section).
IEG tagging: When a neuron fires intensely (e.g. undergoes LTP induction or sustained high-frequency firing), set its IEG_flag = True. This models the immediate early genes (e.g. Fos, NPAS4) being expressed only in strongly activated neurons
nature.com
nature.com
. For example, if eligibility_trace at a synapse is high and post-syn neuron’s IEG_flag is False, one might set IEG_flag if the neuron spiked above a rate threshold. The IEG_flag then primes the neuron for long-term consolidation (see below) and decays over minutes (implement as a float that counts down). IEG tagging should only occur if plast_enabled is true (i.e. plasticity is gated on).
These plasticity mechanisms are grounded in known biology: STDP embodies activity-dependent potentiation/depression
nature.com
, and theta-burst paradigms selectively induce LTP
nature.com
. The use of IEG tags mirrors that “IEG expression in response to stimuli… plays a key role in … memory”
nature.com
nature.com
.
5. Consolidation and IEG Decay Dynamics
Implement longer-term consolidation of synaptic changes:
Weight consolidation: When a neuron’s IEG_flag is set and an edge’s eligibility_trace is above a threshold, commit a permanent weight change. For example, after detecting TBS or sufficient pre-post activity (eligibility), increase weight by a factor or learned increment. This models consolidation of LTP/LTD in the presence of plasticity tags (synaptic tagging and capture).
IEG decay: Decrement IEG_flag (or its float proxy) each timestep with a time constant of minutes (e.g. half-life of ~30–60 minutes), to simulate the transient nature of gene expression.
nature.com
 Most IEG expression in the organoids plateaued after hours, so the tag should eventually reset.
Synaptic tag removal: Clear stp_tag and reduce eligibility_trace over time (seconds) if not consolidated. This models the temporary window during which a synapse is eligible for LTP/LTD.
In sum, only synapses with high eligibility and an active IEG tag (and with plast_enabled) undergo lasting weight change. This reflects how IEGs mark neurons for learning
nature.com
.
6. Gating Mechanisms (PLAST_EN, Neuromodulators)
Include global or local gating signals to control when plasticity is active:
PLAST_EN flag: A global boolean that enables/disables all plasticity updates. When False, skip STDP weight changes and do not set IEG flags. This could simulate neuromodulatory state (e.g. absence of dopamine) that gates learning.
Neuromodulator controls: Optionally add fields for neuromodulators (e.g. dopamine, acetylcholine levels as scalars). Incorporate them by multiplying plasticity learning rates or opening gates only when neuromodulator is present. For example, require dopamine > 0 for LTP to consolidate (mimicking reward signals).
This gating ensures plasticity occurs only under appropriate conditions (as in biology). For instance, one could set PLAST_EN false by default and turn it on only during explicit “learning” phases or TBS events.
7. Homeostatic Control (E/I Balance, Criticality)
Add mechanisms that regulate overall activity and criticality:
E/I gain control: Monitor the average firing rate of excitatory and inhibitory populations. If overall excitation dominates (too many spikes), slowly increase inhibitory synaptic weights or intrinsic thresholds; if inhibition dominates (network silent), scale up excitatory weights or lower thresholds. This maintains excitatory/inhibitory balance and prevents runaway excitation or quiescence.
Criticality controller: Compute network criticality metrics (e.g. branching ratio = (total new spikes)/(total spikes), deviation from criticality) over sliding windows. Target a branching ratio ≈1 (critical state) as in the organoid study
nature.com
nature.com
. If branching ratio >1 (supercritical), scale down excitatory gains or up inhibitory gains; if <1 (subcritical), do the reverse. This homeostatic feedback drives the network toward critical dynamics, which “optimizes information processing”
nature.com
nature.com
.
These controls should run continuously but slowly (e.g. adjusting parameters over seconds to minutes). For example, every simulated second evaluate firing rate or branching ratio and apply small adjustments (e.g. multiply all excitatory weights by 0.99 if too active). This mimics observed development: more mature organoids showed tighter regulation of criticality
nature.com
nature.com
.
8. Event-Driven Simulation Loop Integration
In the main update() loop (called each simulation timestep or when events occur), integrate the above steps in order. A typical cycle:
Process refractory: For each node, decrement refractory_timer. If >0, do not allow new spikes this step.
Handle incoming spikes: Pop scheduled spike events from the queue and add their weights to target nodes’ I_syn. Optionally apply delays.
Update membrane potentials: For each node, update v_dend/v_mem based on inputs (I_syn) and leak. Check if v_mem crosses threshold and refractory_timer<=0. If so, fire a spike: set last_spike_time = t, reset v_mem, set refractory_timer = T_ref, and enqueue spike events for all outgoing edges. Also increment the node’s theta_burst_counter.
Theta-burst detection: If a neuron’s theta_burst_counter exceeds the burst threshold within the short window, set stp_tag=True on its active outgoing edges and reset the counter.
Plasticity updates (STDP): For each spike that occurred this step, identify its pre- and post- edges. Compute Δt with the other side’s last_spike_time. Update eligibility_trace_edge according to STDP rule (and record for potential weight change). Do not immediately change weight if gating rules require waiting.
IEG and consolidation: After spikes, for each neuron whose activity was high, set IEG_flag=True if conditions met. If both IEG_flag and an edge’s eligibility_trace are above thresholds, apply the weight change (e.g., weight += η * elig_trace) and clear those traces.
Apply gating: If PLAST_EN is false or neuromodulator conditions are not met, skip steps 5–6.
Decay traces: Apply exponential decay to all eligibility_trace_edge, neuron IEG_flag (or decrease countdown timer), and reset theta_burst_counter if its window elapsed.
Homeostatic adjust: Periodically (e.g. every 100 ms), compute recent firing statistics and adjust excitatory/inhibitory gains or thresholds as needed (see Section 7).
By integrating these steps in order, the network will exhibit spike-driven learning. For example, on a spike event, STDP eligibility is recorded, and shortly after (or after a series of spikes) weights are updated if tags/gates allow. This mirrors how the organoid networks responded to stimuli and later showed persistent changes in connectivity and criticality
nature.com
nature.com
.
9. Suggested Validation Tests
Finally, implement tests to ensure correct behavior:
Single-neuron spike test: A neuron with constant input above threshold should fire regularly, obey refractory (no spikes during refractory period).
STDP timing test: Pair one pre- and one post-synaptic spike at known Δt. Verify that weight increases for pre→post (positive Δt) and decreases for post→pre, with magnitude matching A_plus*exp(-Δt/τ_plus)
nature.com
.
Theta-burst protocol: Simulate a trained pattern of 4 high-frequency pulses on one neuron. Verify its outgoing edges receive an LTP tag (stp_tag) and that afterwards the connected weights are potentiated. Also check network connectivity metrics (node/edge count, branching ratio) increase as in Fig. 8
nature.com
.
Chemically induced LTP: Model application of 4-AP + bicuculline (increase excitatory gain). This should dramatically raise firing rates and trigger plasticity tags, replicating “chemical LTP” conditions
nature.com
. Verify that IEG flags are set on active neurons and corresponding synapses potentiate.
Inhibition/excitation test: Apply a simulated blocker (set excitatory weights to zero, or set excitatory input to zero) and verify bursting stops, matching the NBQX/AP5 effect
nature.com
. Conversely, block inhibition (silence inhibitory neurons) and ensure network over-activity/increased burst frequency, as with bicuculline
nature.com
.
IEG decay: After a high-activity event, check that IEG_flag becomes true and then decays to false over the designed time constant. Ensure no further weight consolidation occurs after decay.
Homeostasis/convergence: Run the network for an extended period without inputs. Verify that firing rates and branching ratio approach a stable regime (branching ≈1). For example, a network set to supercritical should adjust and move towards criticality, echoing organoid maturation results
nature.com
nature.com
.
Criticality metrics: Compute statistics (branching ratio, deviation from criticality, avalanche distributions) on the spontaneous activity. Compare to expected “scale-free” signatures (e.g. branching ~1)
nature.com
nature.com
. This tests whether homeostatic control is working.
Each test should be implemented as a unit test (e.g. in PyTorch/PyG simulation code) that checks quantitative outcomes. For instance, ensure that after TBS-pattern input, the number of active edges increases (as in Fig. 8a–b) and the measured branching ratio rises
nature.com
. Only when all such tests pass can we trust that the digital neuron logic faithfully reflects the referenced biology and meets the target system’s requirements. Sources: We have drawn key modeling insights from the neural organoid study
nature.com
nature.com
nature.com
nature.com
nature.com
. These inform our implementation of STDP, IEG-mediated plasticity, excitatory/inhibitory balance, theta-burst learning, and criticality regulation in the PyG framework.